!function(){"use strict";let playerUrl="https://fantasy.premierleague.com/drf/element-summary/",mainFplUrl="https://fantasy.premierleague.com/drf/bootstrap-static",transfersInNameTableRow=document.getElementsByClassName("transfers-in-names")[0],transfersOutNameTableRow=document.getElementsByClassName("transfers-out-names")[0],mostPointsPerGameDiv=document.getElementsByClassName("most-point-per-game")[0],fixtureEaseScheduleDiv=document.getElementsByClassName("fixture-ease-schedule")[0],formTableDiv=document.getElementsByClassName("form-table")[0],teamNames=[],requestData=Url=>new Promise(function(resolve,reject){let xhr=new XMLHttpRequest;xhr.open("GET",Url,!0),xhr.onload=function(){4===xhr.readyState&&(200===xhr.status?resolve(JSON.parse(xhr.responseText)):reject(Error(xhr.statusText)))},xhr.send(null)}),getDetailedPlayerData=id=>new Promise(function(resolve,reject){let xhr=new XMLHttpRequest;xhr.open("GET",playerUrl+id,!0),xhr.onload=function(){4===xhr.readyState&&(200===xhr.status?resolve(JSON.parse(xhr.responseText)):reject(Error(xhr.statusText)))},xhr.send(null)});function getTop5(players,atrribute){return players.sort((a,b)=>b[atrribute]-a[atrribute]).slice(0,5)}function getTop5ByPosition(players,atrribute,positionId){let playersFromPosition;return players.filter(player=>player.element_type===positionId).sort((a,b)=>b[atrribute]-a[atrribute]).slice(0,5)}let getTopPlayer=(players,attribute)=>players.slice(0,1)[0][attribute];function parseDetailedPlayerData(){return JSON.parse(this.responseText)}function getNextOppentent(data){return data.fixtures_summary[0].opponent_short_name}function isHomeGame(data){return data.fixtures_summary[0].is_home}function createExpectedPointsPlayerElement(player,p,nextOpp,isHome,position){let expectedList=document.getElementsByClassName("expected-points-list-"+position)[0],playerEle=document.createElement("div");playerEle.classList.add("bar-"+Math.round(p));let expectedPointsElement=document.createElement("span");expectedPointsElement.classList.add("expected-points__name"),expectedPointsElement.appendChild(document.createTextNode(player.expected_next)),playerEle.appendChild(expectedPointsElement),playerEle.appendChild(document.createElement("br")),playerEle.appendChild(document.createTextNode(player.name)),expectedList.appendChild(playerEle)}let parsePlayerData=result=>result.map(player=>({name:player.web_name,transfers_in_week:player.transfers_in_event,transfers_out_week:player.transfers_out_event,points_per_game:player.points_per_game,expected_next:player.ep_next,form:player.form,id:player.id,team_code:player.team_code,element_type:player.element_type})),addPlayerToExpectedPointsList=(result,player,relativeAmount,position)=>{let nextOpp,isHome;createExpectedPointsPlayerElement(player,relativeAmount,getNextOppentent(result),isHomeGame(result),position)};function createPlayerData(name,val,p){let newTableData=document.createElement("li"),text=document.createTextNode(val);var br=document.createElement("br");let playerSpanEle=document.createElement("span"),nameText=document.createTextNode(name);playerSpanEle.appendChild(nameText),newTableData.appendChild(text),newTableData.appendChild(br),newTableData.appendChild(playerSpanEle),newTableData.classList.add("player");let size,s=(200*p).toString()+"px";newTableData.style.width=s,newTableData.style.height=s;let fontSize=3*p;newTableData.style.fontSize=fontSize+"rem",playerSpanEle.style.fontSize=.5*fontSize+"rem",newTableData.style.color="#fff";let borderSize=4*p;return newTableData.style.borderWidth=borderSize+"px",newTableData}let getHighestTransferAmount=(transfersIn,transfersOut)=>{let mostIn=transfersIn.slice(0,1)[0].transfers_in_week,mostOut=transfersOut.slice(0,1)[0].transfers_out_week;return mostOut>mostIn?mostOut:mostIn},createExpectedPointsList=(data,topExpectedPoints,position)=>{data.forEach(player=>{let relativeAmount=player.expected_next/topExpectedPoints*100,promises=[];promises.push(getDetailedPlayerData(player.id)),Promise.all(promises).then(function(result){result.forEach(function(r){addPlayerToExpectedPointsList(r,player,relativeAmount,position)})})})},createTransferInList=(data,highestAbsoluteTransferAmount)=>{data.forEach(player=>{let percent=player.transfers_in_week/highestAbsoluteTransferAmount,nameData=createPlayerData(player.name,player.transfers_in_week,percent);transfersInNameTableRow.appendChild(nameData)})},createTransferOutList=(data,highestAbsoluteTransferAmount)=>{data.forEach(player=>{let percent=player.transfers_out_week/highestAbsoluteTransferAmount,nameData=createPlayerData(player.name,player.transfers_out_week,percent);transfersOutNameTableRow.appendChild(nameData)})},getOnePlayerIdFromEachTeam=data=>{let arrayOfTeamCodes=[],listOfPlayer=[];return data.forEach(function(player){-1===arrayOfTeamCodes.indexOf(player.team_code)&&(arrayOfTeamCodes.push(player.team_code),listOfPlayer.push({id:player.id,team:player.team_code}))}),listOfPlayer},getTeamNames=()=>requestData("https://fantasy.premierleague.com/drf/teams/"),getTeamName=id=>{let result;return teamNames.find(function(team){return team.code===id}).name},parseTeamNames=function(teams){teamNames=teams.map(function(team){return{code:team.code,name:team.name}})},getTransferEaseSchedule=async function(data){let fixtures=[];return parseTeamNames(await getTeamNames()),new Promise(function(resolve,reject){data.forEach(function(player){let promises=[];promises.push(getDetailedPlayerData(player.id)),Promise.all(promises).then(function(results){results.forEach(function(result){let history,pastResults=[],totalPointsOverLast6=0;result.history.slice(-6).forEach(function(fixture){let wasHome=fixture.was_home,homeTeamGoals=fixture.team_h_score,awayTeamGoals=fixture.team_a_score,didWinMatch=0;totalPointsOverLast6+=didWinMatch=wasHome?homeTeamGoals>awayTeamGoals?3:homeTeamGoals<awayTeamGoals?0:1:homeTeamGoals>awayTeamGoals?0:homeTeamGoals<awayTeamGoals?3:1,pastResults.push(didWinMatch)});let nextFixtures=result.fixtures.slice(0,6),f=[],totalDiff=0,teamName=getTeamName(player.team);nextFixtures.forEach(function(fix){totalDiff+=fix.difficulty,f.push({oppenent:fix.opponent_name,difficulty:fix.difficulty})});let avgDifficulty=totalDiff/f.length,avgPoints=totalPointsOverLast6/6;fixtures.push({fixtures:f,history:pastResults,avgPoints:avgPoints,averageDifficulty:avgDifficulty,team:teamName})})}).then(function(){20===fixtures.length&&resolve(fixtures)})})})},createFixtureScheduleList=data=>{let avgDiff,avgPoints;data.sort((a,b)=>a.averageDifficulty-b.averageDifficulty).forEach(function(d){let fixtures=d.fixtures,teamFixtures=document.createElement("li");teamFixtures.classList.add("team-fixtures");let teamNameDiv=document.createElement("div");teamNameDiv.classList.add("team-name"),teamNameDiv.appendChild(document.createTextNode(d.team)),teamFixtures.appendChild(teamNameDiv),fixtures.forEach(function(fixture){let fix=document.createElement("div");fix.classList.add("fixture"),fix.classList.add("difficulty-"+fixture.difficulty),fix.title=fixture.oppenent,teamFixtures.appendChild(fix)}),fixtureEaseScheduleDiv.appendChild(teamFixtures)}),data.sort((a,b)=>b.avgPoints-a.avgPoints).forEach(function(d){let history=d.history,teamResult=document.createElement("li");teamResult.classList.add("team-fixtures");let teamNameDiv=document.createElement("div");teamNameDiv.classList.add("team-name"),teamNameDiv.appendChild(document.createTextNode(d.team)),teamResult.appendChild(teamNameDiv),history.forEach(function(matchResult){let fix=document.createElement("div");fix.classList.add("fixture"),fix.classList.add("match-result-"+matchResult),teamResult.appendChild(fix)}),formTableDiv.appendChild(teamResult)})},playerDataPromise;requestData(mainFplUrl).then(function(data){let playerData=parsePlayerData(data.elements),top5TransfersIn=getTop5(playerData,"transfers_in_week"),top5TransfersOut=getTop5(playerData,"transfers_out_week"),highestAbsoluteTransferAmount=getHighestTransferAmount(top5TransfersIn,top5TransfersOut);createTransferInList(top5TransfersIn,highestAbsoluteTransferAmount),createTransferOutList(top5TransfersOut,highestAbsoluteTransferAmount);let playerList=getOnePlayerIdFromEachTeam(playerData),fixtureEaseSchedule,postions;getTransferEaseSchedule(playerList).then(function(result){createFixtureScheduleList(result)}),requestData("https://fantasy.premierleague.com/drf/element-types/").then(function(result){result.forEach(function(position){let top5=getTop5ByPosition(playerData,"expected_next",position.id);createExpectedPointsList(top5,top5[0].expected_next,position.plural_name_short)})})})}();