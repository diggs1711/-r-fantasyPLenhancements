!function(){let userId=0,loggedInUserUrl="https://fantasy.premierleague.com/drf/bootstrap-dynamic",userMainUrl="https://fantasy.premierleague.com/drf/my-team/",liveDataUrl="https://fantasy.premierleague.com/drf/event/",leaguesBody=document.querySelectorAll(".live-leagues-body")[0];const latestPicksBaseUrl="https://fantasy.premierleague.com/drf/entry/",liveLeaguesTable=document.querySelectorAll(".live-leagues-table")[0],leagueUrl="https://fantasy.premierleague.com/drf/leagues-classic-standings/",classicLeagueBody=document.querySelectorAll(".live-classic-league-body")[0],classicLeagueDiv=document.querySelectorAll(".classic-leagues")[0],backToLeagueListBtn=document.querySelectorAll(".league-back-btn")[0],leagesDiv=document.querySelectorAll(".live-leagues")[0],leagueName=document.querySelectorAll(".league-name")[0];let livePlayerData={};backToLeagueListBtn.addEventListener("click",event=>{classicLeagueDiv.classList.add("hidden"),liveLeaguesTable.classList.remove("hidden"),liveLeaguesTable.classList.remove("animated"),liveLeaguesTable.classList.remove("fadeOutDown")});let requestData=Url=>new Promise(function(resolve,reject){let xhr=new XMLHttpRequest;xhr.open("GET",Url,!0),xhr.onload=function(){4===xhr.readyState&&(200===xhr.status?resolve(JSON.parse(xhr.responseText)):reject(Error(xhr.statusText)))},xhr.send(null)}),userPromise;async function openMiniLeagueTable(league,currentGameweek){let leagueDataPromise=requestData(leagueUrl+league.id);liveLeaguesTable.classList.add("animated","fadeOutDown"),livePlayerData=(await getLiveData(currentGameweek)).elements,leagueDataPromise.then(function(result){leagueName.innerHTML="",leagueName.appendChild(document.createTextNode(result.league.name));let league=result.standings.results.map(function(player){return{name:player.entry_name,rank:player.rank,total:player.total,entry_id:player.entry,gameweek_points:player.event_total}});liveLeaguesTable.classList.add("hidden"),classicLeagueBody.innerHTML="";let latestPicksPromises=[],leaguePlayers=[];league.forEach(function(player){latestPicksPromises.push(requestData(latestPicksBaseUrl+"/"+player.entry_id+"/event/"+currentGameweek+"/picks")),leaguePlayers.push(player)}),Promise.all(latestPicksPromises).then(function(players){players.forEach(function(result,index){let currPlayer=leaguePlayers[index],currentGameweekPoints=currPlayer.gameweek_points,playerPicks,latestPlayerPoints=0;result.picks.forEach(function(pick){if("bboost"===result.active_chip||pick.position<=11){let playerElementId=pick.element,totalPlayerPoints=livePlayerData[playerElementId].stats.total_points*pick.multiplier;latestPlayerPoints+=totalPlayerPoints}});let addedPoints=0;latestPlayerPoints>=0&&currentGameweekPoints>=0?addedPoints=latestPlayerPoints-currentGameweekPoints:addedPoints-=Math.abs(latestPlayerPoints)+Math.abs(currentGameweekPoints),currentGameweekPoints!==latestPlayerPoints&&(currPlayer.gameweek_points+=addedPoints),currPlayer.chip=result.active_chip,currPlayer.total+=addedPoints,leaguePlayers[index]=currPlayer}),leaguePlayers.sort((a,b)=>b.total-a.total),classicLeagueBody.innerHTML="",leaguePlayers.forEach(function(player){let row=document.createElement("tr");for(const key in player)if(player.hasOwnProperty(key)&&"entry_id"!=key){const element=player[key];let cell=document.createElement("td");cell.classList.add("league-player"),cell.appendChild(document.createTextNode(element)),row.appendChild(cell)}classicLeagueBody.appendChild(row),classicLeagueDiv.classList.remove("hidden")})})})}requestData(loggedInUserUrl).then(async function(result){if(null===result.entry)return void leagesDiv.appendChild(document.createTextNode("YOU MUST BE LOGGED IN ON THE MAIN FPL SITE TO VIEW LIVE LEAGUE DATA"));let currentGameweek=result.entry.current_event,userUrl;var userDataPromise;userId=result.entry.id,requestData(userMainUrl+userId).then(function(result){let leagues;result.leagues.classic.map(function(league){return{name:league.name,rank:league.entry_rank,id:league.id}}).forEach(league=>{let row=document.createElement("tr");for(const key in league)if(league.hasOwnProperty(key)&&"id"!==key){const element=league[key];let cell=document.createElement("td");cell.classList.add("league"),cell.appendChild(document.createTextNode(element)),row.appendChild(cell),cell.addEventListener("click",openMiniLeagueTable.bind(this,league,currentGameweek))}leaguesBody.appendChild(row)})})});let getLiveData=function(currGameweek){return requestData(liveDataUrl+currGameweek+"/live")}}();